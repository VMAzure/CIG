@model CIG.Models.HomeViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <h1>Seleziona il veicolo</h1>

    <div class="form-group">
        <label for="brandDropdown">Marca</label>
        <select id="brandDropdown" class="form-control">
            <option value="">-- Seleziona Marca --</option>
            @foreach (var brand in Model.Brands)
            {
                <option value="@brand">@brand</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="modelDropdown">Modello</label>
        <select id="modelDropdown" class="form-control" disabled>
            <option value="">-- Seleziona Modello --</option>
        </select>
    </div>

    <div class="form-group">
        <label for="versionDropdown">Versione</label>
        <select id="versionDropdown" class="form-control" disabled>
            <option value="">-- Seleziona Versione --</option>
        </select>
    </div>

    <div class="form-group">
        <label for="allestimentoDropdown">Allestimento (opzionale)</label>
        <select id="allestimentoDropdown" class="form-control" disabled>
            <option value="">-- Seleziona Allestimento --</option>
        </select>
    </div>

    <div class="form-group">
        <label for="modelYearInput">Anno Modello</label>
        <input type="text" id="modelYearInput" class="form-control" placeholder="Es: 2024">
    </div>
</div>



<script>
    document.addEventListener("DOMContentLoaded", function () {
        const brandDropdown = document.getElementById("brandDropdown");
        const modelDropdown = document.getElementById("modelDropdown");
        const versionDropdown = document.getElementById("versionDropdown");
        const allestimentoDropdown = document.getElementById("allestimentoDropdown");

        brandDropdown.addEventListener("change", function () {
            const brand = this.value;

            if (brand) {
                modelDropdown.disabled = false;
                modelDropdown.innerHTML = "<option value=''>-- Seleziona Modello --</option>";

                fetch(`/api/getModels?brand=${brand}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(model => {
                            modelDropdown.innerHTML += `<option value="${model}">${model}</option>`;
                        });
                    });
            }
        });

        modelDropdown.addEventListener("change", function () {
            const brand = brandDropdown.value;
            const model = this.value;

            if (model) {
                versionDropdown.disabled = false;
                versionDropdown.innerHTML = "<option value=''>-- Seleziona Versione --</option>";

                fetch(`/api/getVersions?brand=${brand}&model=${model}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(version => {
                            versionDropdown.innerHTML += `<option value="${version}">${version}</option>`;
                        });
                    });
            }
        });

        versionDropdown.addEventListener("change", function () {
            const brand = brandDropdown.value;
            const model = modelDropdown.value;
            const version = this.value;

            if (version) {
                allestimentoDropdown.disabled = false;
                allestimentoDropdown.innerHTML = "<option value=''>-- Seleziona Allestimento --</option>";

                fetch(`/api/getAllestimenti?brand=${brand}&model=${model}&version=${version}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(allestimento => {
                            allestimentoDropdown.innerHTML += `<option value="${allestimento}">${allestimento}</option>`;
                        });
                    });
            }
        });
    });
</script>